{"ast":null,"code":"export default {\n  name: 'RockPaperScissorsGame',\n  data() {\n    return {\n      username: '',\n      wins: 0,\n      losses: 0,\n      ties: 0,\n      computerWins: 0,\n      computerLosses: 0,\n      userChoice: null,\n      computerChoice: null,\n      resultMessage: ''\n    };\n  },\n  computed: {\n    indicatorColor() {\n      if (!this.resultMessage) return '';\n      return this.resultMessage.includes(\"win\") ? 'bg-green-500' : this.resultMessage.includes(\"lose\") ? 'bg-red-500' : 'bg-yellow-500';\n    }\n  },\n  mounted() {\n    this.loadScores();\n  },\n  methods: {\n    playGame(choice) {\n      const choices = ['rock', 'paper', 'scissors'];\n      const computerChoice = choices[Math.floor(Math.random() * choices.length)];\n      this.userChoice = choice;\n      this.computerChoice = computerChoice;\n      this.updateGameResults();\n    },\n    updateGameResults() {\n      // Logic to determine and update game results\n      this.updateLocalStorage();\n    },\n    loadScores() {\n      // Load scores from local storage\n    },\n    updateLocalStorage() {\n      // Update local storage with current scores\n    },\n    getImage(choice) {\n      return choice === 'rock' ? 'c4hjWHw.png' : choice === 'paper' ? 'dh5Z6mq.png' : 'qt3WWjy.png';\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","wins","losses","ties","computerWins","computerLosses","userChoice","computerChoice","resultMessage","computed","indicatorColor","includes","mounted","loadScores","methods","playGame","choice","choices","Math","floor","random","length","updateGameResults","updateLocalStorage","getImage"],"sources":["C:\\Users\\Mesha\\Desktop\\Rock-Paper-Scissors - Game\\rock-paper-scissors\\src\\components\\RockPaperScissorsGame.vue"],"sourcesContent":["<template>\r\n  <div class=\"game text-white bg-gray-900 h-screen flex flex-col items-center\">\r\n    <div class=\"w-full flex justify-between items-center py-4\">\r\n      <!-- Player's Score on the left top -->\r\n      <div class=\"bg-blue-700 p-6 rounded-lg shadow-lg\">\r\n        <h2 class=\"text-2xl font-bold text-white mb-4\">\r\n          <i class=\"fas fa-user-circle mr-2\"></i>{{ username }}'s Score\r\n        </h2>\r\n        <div class=\"text-lg\">\r\n          <p class=\"font-semibold\">Wins: <span class=\"text-3xl font-bold text-green-500\">{{ wins }}</span></p>\r\n          <p class=\"font-semibold\">Losses: <span class=\"text-3xl font-bold text-red-500\">{{ losses }}</span></p>\r\n          <p class=\"font-semibold\">Ties: <span class=\"text-3xl font-bold text-yellow-500\">{{ ties }}</span></p>\r\n        </div>\r\n      </div>\r\n      <!-- Go Back to Homepage Button -->\r\n      <router-link to=\"/home\" class=\"bg-gray-700 hover:bg-gray-800 text-white font-bold py-3 px-8 rounded-lg\">\r\n        <i class=\"fas fa-home mr-3\"></i>Go Back to Homepage\r\n      </router-link>\r\n      <!-- Computer's Score on the right top -->\r\n      <div class=\"bg-gray-800 p-6 rounded-lg shadow-lg\">\r\n        <h2 class=\"text-2xl font-bold text-white mb-4\">\r\n          <i class=\"fas fa-desktop mr-2\"></i>Computer's Score\r\n        </h2>\r\n        <div class=\"text-lg\">\r\n          <p class=\"font-semibold\">Wins: <span class=\"text-3xl font-bold text-green-500\">{{ computerWins }}</span></p>\r\n          <p class=\"font-semibold\">Losses: <span class=\"text-3xl font-bold text-red-500\">{{ computerLosses }}</span></p>\r\n          <p class=\"font-semibold\">Ties: <span class=\"text-3xl font-bold text-yellow-500\">{{ ties }}</span></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Game Area in the middle of the screen -->\r\n    <div class=\"flex justify-center space-x-10 my-8\">\r\n      <div v-for=\"choice in ['rock', 'paper', 'scissors']\" :key=\"choice\" class=\"text-center relative\">\r\n        <img :src=\"`https://i.imgur.com/${getImage(choice)}`\" :alt=\"choice\" class=\"h-40 cursor-pointer transform transition-all\" @click=\"playGame(choice)\">\r\n        <p class=\"text-lg font-semibold mt-2\">{{ choice.charAt(0).toUpperCase() + choice.slice(1) }}</p>\r\n        <div v-if=\"userChoice === choice\" class=\"absolute inset-0 flex justify-center items-center\">\r\n          <div :class=\"['w-12 h-12 rounded-full', indicatorColor]\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Buttons at the bottom -->\r\n    <div class=\"mt-auto p-4\">\r\n      <button v-if=\"userChoice\" @click=\"resetGame\" class=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-4 px-8 rounded-lg\">\r\n        <i class=\"fas fa-redo-alt mr-3\"></i>Play Again\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'RockPaperScissorsGame',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      wins: 0,\r\n      losses: 0,\r\n      ties: 0,\r\n      computerWins: 0,\r\n      computerLosses: 0,\r\n      userChoice: null,\r\n      computerChoice: null,\r\n      resultMessage: '',\r\n    };\r\n  },\r\n  computed: {\r\n    indicatorColor() {\r\n      if (!this.resultMessage) return '';\r\n      return this.resultMessage.includes(\"win\") ? 'bg-green-500' : this.resultMessage.includes(\"lose\") ? 'bg-red-500' : 'bg-yellow-500';\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadScores();\r\n  },\r\n  methods: {\r\n    playGame(choice) {\r\n      const choices = ['rock', 'paper', 'scissors'];\r\n      const computerChoice = choices[Math.floor(Math.random() * choices.length)];\r\n      this.userChoice = choice;\r\n      this.computerChoice = computerChoice;\r\n      this.updateGameResults();\r\n    },\r\n    updateGameResults() {\r\n      // Logic to determine and update game results\r\n      this.updateLocalStorage();\r\n    },\r\n    loadScores() {\r\n      // Load scores from local storage\r\n    },\r\n    updateLocalStorage() {\r\n      // Update local storage with current scores\r\n    },\r\n    getImage(choice) {\r\n      return choice === 'rock' ? 'c4hjWHw.png' : choice === 'paper' ? 'dh5Z6mq.png' : 'qt3WWjy.png';\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styles here can further adjust margins, colors, etc. */\r\n</style>\r\n"],"mappings":"AAkDA,eAAe;EACbA,IAAI,EAAE,uBAAuB;EAC7BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE,CAAC;MACPC,YAAY,EAAE,CAAC;MACfC,cAAc,EAAE,CAAC;MACjBC,UAAU,EAAE,IAAI;MAChBC,cAAc,EAAE,IAAI;MACpBC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,IAAI,CAAC,IAAI,CAACF,aAAa,EAAE,OAAO,EAAE;MAClC,OAAO,IAAI,CAACA,aAAa,CAACG,QAAQ,CAAC,KAAK,IAAI,cAAa,GAAI,IAAI,CAACH,aAAa,CAACG,QAAQ,CAAC,MAAM,IAAI,YAAW,GAAI,eAAe;IACnI;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAACC,MAAM,EAAE;MACf,MAAMC,OAAM,GAAI,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC;MAC7C,MAAMV,cAAa,GAAIU,OAAO,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAIH,OAAO,CAACI,MAAM,CAAC,CAAC;MAC1E,IAAI,CAACf,UAAS,GAAIU,MAAM;MACxB,IAAI,CAACT,cAAa,GAAIA,cAAc;MACpC,IAAI,CAACe,iBAAiB,CAAC,CAAC;IAC1B,CAAC;IACDA,iBAAiBA,CAAA,EAAG;MAClB;MACA,IAAI,CAACC,kBAAkB,CAAC,CAAC;IAC3B,CAAC;IACDV,UAAUA,CAAA,EAAG;MACX;IAAA,CACD;IACDU,kBAAkBA,CAAA,EAAG;MACnB;IAAA,CACD;IACDC,QAAQA,CAACR,MAAM,EAAE;MACf,OAAOA,MAAK,KAAM,MAAK,GAAI,aAAY,GAAIA,MAAK,KAAM,OAAM,GAAI,aAAY,GAAI,aAAa;IAC/F;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}